AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Deployment environment

  SecretsManagerName:
    Type: String
    Default: 'podcasto-secrets-dev'
    Description: 'Name of the Secrets Manager secret containing API keys'

  S3BucketName:
    Type: String
    Default: 'podcasto-podcasts'
    Description: S3 Bucket Name for storing messages

  SQSQueueUrl:
    Type: String
    Default: 'https://sqs.us-east-1.amazonaws.com/638520701769/script-generation-queue'
    Description: URL of the SQS queue for script generation (next stage after Telegram collection)

  ApiEndpoint:
    Type: String
    Default: 'https://podcasto.vercel.app'
    Description: Base URL for API endpoint

Resources:
  TelegramCollector:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: python3.12
    Properties:
      CodeUri: .
      Handler: src.lambda_handler.lambda_handler
      Runtime: python3.12
      Timeout: 300
      MemorySize: 256
      Layers:
        - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:podcasto-shared-layer-${Environment}:3'
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          TELEGRAM_API_ID: !Sub '{{resolve:secretsmanager:${SecretsManagerName}:SecretString:TELEGRAM_API_ID}}'
          TELEGRAM_API_HASH: !Sub '{{resolve:secretsmanager:${SecretsManagerName}:SecretString:TELEGRAM_API_HASH}}'
          TELEGRAM_SESSION: !Sub '{{resolve:secretsmanager:${SecretsManagerName}:SecretString:TELEGRAM_SESSION}}'
          S3_BUCKET_NAME: !Ref S3BucketName
          SQS_QUEUE_URL: !Ref SQSQueueUrl
          SUPABASE_URL: !Sub '{{resolve:secretsmanager:${SecretsManagerName}:SecretString:SUPABASE_URL}}'
          SUPABASE_KEY: !Sub '{{resolve:secretsmanager:${SecretsManagerName}:SecretString:SUPABASE_SERVICE_KEY}}'
          API_ENDPOINT: !Ref ApiEndpoint
          INTERNAL_API_KEY: !Sub '{{resolve:secretsmanager:${SecretsManagerName}:SecretString:INTERNAL_API_KEY}}'
          LOG_LEVEL: DEBUG
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3BucketName
        - Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: "*"
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretsManagerName}*' 